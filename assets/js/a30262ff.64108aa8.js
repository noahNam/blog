"use strict";(self.webpackChunknoah_blog=self.webpackChunknoah_blog||[]).push([[8575],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>d});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),m=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},p=function(e){var a=m(e.components);return n.createElement(s.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},h=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(t),h=r,d=c["".concat(s,".").concat(h)]||c[h]||u[h]||l;return t?n.createElement(d,o(o({ref:a},p),{},{components:t})):n.createElement(d,o({ref:a},p))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=h;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=t[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},5925:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var n=t(7462),r=(t(7294),t(3905));const l={slug:"masrshmallow",title:"[Python] Masrshmallow",authors:"noahNam",tags:["python","masrshmallow"]},o="Marshmallow",i={unversionedId:"python/2021-04-24-masrshmallow",id:"python/2021-04-24-masrshmallow",title:"[Python] Masrshmallow",description:"What can you do with the marshmallow?",source:"@site/docs/python/2021-04-24-masrshmallow.md",sourceDirName:"python",slug:"/python/masrshmallow",permalink:"/docs/python/masrshmallow",draft:!1,tags:[{label:"python",permalink:"/docs/tags/python"},{label:"masrshmallow",permalink:"/docs/tags/masrshmallow"}],version:"current",frontMatter:{slug:"masrshmallow",title:"[Python] Masrshmallow",authors:"noahNam",tags:["python","masrshmallow"]},sidebar:"tutorialSidebar",previous:{title:"[Fastapi] init",permalink:"/docs/fastapi/fastapi-init"},next:{title:"[Python] Pypubsub",permalink:"/docs/python/pypubsub"}},s={},m=[{value:"What can you do with the marshmallow?",id:"what-can-you-do-with-the-marshmallow",level:2},{value:"Serializing Objects (&quot;Dumping&quot;)",id:"serializing-objects-dumping",level:3},{value:"Deserializing to Objects (&quot;Loading&quot;)",id:"deserializing-to-objects-loading",level:3},{value:"Validation",id:"validation",level:3},{value:"\ucc38\uace0 \uc790\ub8cc",id:"\ucc38\uace0-\uc790\ub8cc",level:2}],p={toc:m},c="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(c,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"marshmallow"},"Marshmallow"),(0,r.kt)("h2",{id:"what-can-you-do-with-the-marshmallow"},"What can you do with the marshmallow?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Python \uac1d\uccb4 \u2192 \uae30\ubcf8 Python \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac"),(0,r.kt)("li",{parentName:"ul"},"ORM / ODM \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \uad6c\uc560\ubc1b\uc9c0 \uc54a\ub294\ub2e4.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"serializing : Python \uac1d\uccb4\ub97c \uae30\ubcf8 Python \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c \uc9c1\ub82c\ud654 \ud55c\ub2e4."),(0,r.kt)("li",{parentName:"ol"},"deserializing : \uc785\ub825 \ub370\uc774\ud130\ub97c Python \uac1d\uccb4\ub85c \uc5ed\uc9c1\ub82c\ud654 \ud55c\ub2e4"),(0,r.kt)("li",{parentName:"ol"},"validation : \uc785\ub825 \ub370\uc774\ud130\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud55c\ub2e4.")),(0,r.kt)("h3",{id:"serializing-objects-dumping"},'Serializing Objects ("Dumping")'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\uc2a4\ud0a4\ub9c8\uc758 \uba54\uc11c\ub4dc\uc5d0 \uac1d\uccb4\ub97c \uc804\ub2ec\ud558\uc5ec \uac1d\uccb4\ub97c \uc9c1\ub82c\ud654 \ud55c\ub2e4 .")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import datetimeas dt\n\n# User \ubaa8\ub378 \uc791\uc131\nclass User:\n    def __init__(self, name, email):\n                self.name = name\n          self.email = email\n        self.created_at = dt.datetime.now()\n\n        def __repr__(self):\n            return "<User(name={self.name!r})>".format(self=self)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from marshmallow import Schema, fields\n\n# \uc18d\uc131\uc774\ub984\uc744 Field \uac1d\uccb4\uc5d0 \ub9f5\ud551\ud558\ub294 \uc2a4\ud0a4\ub9c8 \uc791\uc131\nclass UserSchema(Schema):\n    name = fields.Str()\n    email = fields.Email()\n    created_at = fields.DateTime()\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from pprintimport pprint\n\nuser = User(name="Monty", email="monty@python.org")\nschema = UserSchema()\nresult = schema.dump(user)\npprint(result)\n# {\n#  "name": "Monty",\n#  "email": "monty@python.org",\n#  "created_at": "2014-08-17T14:54:16.049594+00:00"\n# }\n\n# dumps\ub97c \uc774\uc6a9\ud558\uba74 json\uc778\ucf54\ub529 \ubb38\uc790\uc5f4\ub85c \uc9c1\ub82c\ud654 \ud560 \uc218\ub3c4 \uc788\ub2e4.\njson_result = schema.dumps(user)\npprint(json_result)\n# \'{"name": "Monty", "email": "monty@python.org", "created_at": "2014-08-17T14:54:16.049594+00:00"}\'\n')),(0,r.kt)("h3",{id:"deserializing-to-objects-loading"},'Deserializing to Objects ("Loading")'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\uc785\ub825 dict()\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\uace0 \uc2a4\ud0a4\ub9c8\uc758  load \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec\ud55c \ud6c4 \ucd5c\uc885\uc801\uc73c\ub85c @post_load\uac00 \ub370\ucf54\ub808\uc774\ud305 \ub418\uc5b4 \uc5ed\uc9c1\ub82c\ud654 \ud55c\ub2e4.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from marshmallow import Schema, fields, post_load\n\nclass UserSchema(Schema):\n    name = fields.Str()\n    email = fields.Email()\n    created_at = fields.DateTime()\n\n    @post_load\n    def make_user(self, data, **kwargs):\n        return User(**data)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'user_data = {"name": "Ronnie", "email": "ronnie@stones.com"}\nschema = UserSchema()\nresult = schema.load(user_data)\nprint(result)  # => <User(name=\'Ronnie\')>\n')),(0,r.kt)("h3",{id:"validation"},"Validation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from pprint import pprint\nfrom marshmallow import Schema, fields, ValidationError\n\nclass UserSchema(Schema):\n    name = fields.String(required=True)\n    email = fields.Email()\n\nuser_data = [\n    {"email": "mick@stones.com", "name": "Mick"},\n    {"email": "invalid", "name": "Invalid"},  # invalid email\n    {"email": "keith@stones.com", "name": "Keith"},\n    {"email": "charlie@stones.com"},  # missing "name"\n]\n\ntry:\n    UserSchema(many=True).load(user_data)\nexcept ValidationError as err:\n    pprint(err.messages)\n    # {\n    #   1: {\'email\': [\'Not a valid email address.\']},\n    #   3: {\'name\': [\'Missing data for required field.\']}\n    # }\n')),(0,r.kt)("h2",{id:"\ucc38\uace0-\uc790\ub8cc"},"\ucc38\uace0 \uc790\ub8cc"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://marshmallow.readthedocs.io/en/stable/quickstart.html#serializing-objects-dumping"},"Quickstart - marshmallow 3.11.1 documentation")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://minwook-shin.github.io/python-converting-object-to-datatype-using-marshmallow/"},"Python \uac1d\uccb4\uc5d0\uc11c \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c \ubc14\uafb8\ub294 marshmallow \ub77c\uc774\ube0c\ub7ec\ub9ac \uc54c\uc544\ubcf4\uae30")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://livlikwav.github.io/flask/Flask-marshmallow/"},"Flask-marshmallow\ub85c \ud3b8\ud558\uac8c \ub370\uc774\ud130~\uac1d\uccb4 \uad00\ub9ac\ud558\uae30")))}u.isMDXComponent=!0}}]);